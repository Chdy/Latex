\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+c1}{//}
\PYG{c+c1}{// Created by 邓岩 on 2018/10/29.}
\PYG{c+c1}{//}

\PYG{c+cp}{\PYGZsh{} include \PYGZlt{}stdio.h\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{} include \PYGZlt{}stdlib.h\PYGZgt{}}

\PYG{c+c1}{//红黑树}
\PYG{c+c1}{//每个节点包含5个属性，颜色，权值，左子树指针，右子树指针}
\PYG{c+c1}{//一颗红黑树是满足下列红黑形式的二叉搜索树}
\PYG{c+c1}{//1. 每个节点或者是红色的，或者是黑色的}
\PYG{c+c1}{//2. 根节点是黑色的}
\PYG{c+c1}{//3. 每个叶节点是黑色的，这里说的叶节点是代表每个真正的叶节点还有两个子节点，那两个子节点也是黑色的，}
    \PYG{c+c1}{//比如一个只有一个根节点的树，它为黑色，但是视作它还有两个子节点，也均为黑色}
\PYG{c+c1}{//4. 如果一个节点是红色的，则它的两个叶节点都是黑色的}
\PYG{c+c1}{//5. 对于每个节点，从该节点到其所有后代叶节点的简单路径上，均包含个数相同的黑色节点}

\PYG{c+c1}{//做左旋转时，x的父节点域和其右节点域会改变，右孩子的父节点域和右孩子的左孩子的父节点域会改变}
\PYG{c+c1}{//旋转操作在任何情况都能正常进行}
\PYG{c+c1}{//由于每次增加的都是红节点，且旋转操作绕两红点进行，}
    \PYG{c+c1}{//性质上就像将一个红节点移动到了另一边，所以旋转操作不会破坏性质5}
\PYG{c+c1}{//此代码对于被删除的节点没有释放空间，而且管理节点的T的左孩子域没有指向树的最小节点，}
    \PYG{c+c1}{//树中的最大节点的右孩子域没有指向管理节点，后面进行更改}

\PYG{c+cp}{\PYGZsh{}define RED 1}
\PYG{c+cp}{\PYGZsh{}define BLACK 0}

\PYG{k}{typedef} \PYG{k}{struct} \PYG{n}{node} \PYG{p}{\PYGZob{}}
    \PYG{k}{struct} \PYG{n}{node} \PYG{o}{*} \PYG{n}{left}\PYG{p}{;}
    \PYG{k}{struct} \PYG{n}{node} \PYG{o}{*} \PYG{n}{right}\PYG{p}{;}
    \PYG{k}{struct} \PYG{n}{node} \PYG{o}{*} \PYG{n}{parent}\PYG{p}{;}
    \PYG{k+kt}{int} \PYG{n}{value}\PYG{p}{;}
    \PYG{k+kt}{int} \PYG{n}{color}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}\PYG{n}{Node}\PYG{p}{,} \PYG{o}{*}\PYG{n}{pNode}\PYG{p}{;}

\PYG{k}{struct} \PYG{n}{node} \PYG{o}{*} \PYG{n}{nil}\PYG{p}{;}

\PYG{n}{pNode} \PYG{n+nf}{tree\PYGZus{}minimum}\PYG{p}{(}\PYG{n}{pNode} \PYG{n}{x}\PYG{p}{)} \PYG{c+c1}{//找到根节点为x的最小节点}
\PYG{p}{\PYGZob{}}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{x} \PYG{o}{==} \PYG{n+nb}{NULL}\PYG{p}{)}
        \PYG{k}{return} \PYG{n+nb}{NULL}\PYG{p}{;}

    \PYG{k}{while} \PYG{p}{(}\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left} \PYG{o}{!=} \PYG{n}{nil}\PYG{p}{)}
        \PYG{n}{x} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{p}{;}
    \PYG{k}{return} \PYG{n}{x}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{n}{pNode} \PYG{n+nf}{rb\PYGZus{}find}\PYG{p}{(}\PYG{n}{pNode} \PYG{n}{T}\PYG{p}{,} \PYG{k+kt}{int} \PYG{n}{value}\PYG{p}{)} \PYG{c+c1}{//找到根节点为x且权值为value的节点}
\PYG{p}{\PYGZob{}}
    \PYG{n}{T} \PYG{o}{=} \PYG{n}{T}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{;} \PYG{c+c1}{//根节点}
    \PYG{k}{while} \PYG{p}{(}\PYG{n}{T} \PYG{o}{!=} \PYG{n}{nil} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{T}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{value} \PYG{o}{!=} \PYG{n}{value}\PYG{p}{)}
        \PYG{k}{if} \PYG{p}{(}\PYG{n}{T}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{value} \PYG{o}{\PYGZlt{}} \PYG{n}{value}\PYG{p}{)}
            \PYG{n}{T} \PYG{o}{=} \PYG{n}{T}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{p}{;}
        \PYG{k}{else}
            \PYG{n}{T} \PYG{o}{=} \PYG{n}{T}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{p}{;}

    \PYG{k}{return} \PYG{n}{T}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{n}{pNode} \PYG{n+nf}{tree\PYGZus{}successor}\PYG{p}{(}\PYG{n}{pNode} \PYG{n}{x}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{x} \PYG{o}{==} \PYG{n+nb}{NULL}\PYG{p}{)}
        \PYG{k}{return} \PYG{n+nb}{NULL}\PYG{p}{;}

    \PYG{k}{if} \PYG{p}{(}\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{p}{)} \PYG{c+c1}{//如果有右孩子}
        \PYG{k}{return} \PYG{n}{tree\PYGZus{}minimum}\PYG{p}{(}\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{p}{);}

    \PYG{c+c1}{//以下会有两种情况，既然该节点没有右孩子}
    \PYG{c+c1}{//那么如果该节点是其父节点的左孩子，这样的话，其父节点就是后继}
    \PYG{c+c1}{//或者它是父节点的右孩子，那么存在一个它最近祖先x，该x是另一个节点y的左孩子，那y就是它的后继}

    \PYG{k}{while} \PYG{p}{(}\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{x}\PYG{o}{==}\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{p}{)} \PYG{c+c1}{//当结束时，x必然是某节点的左子树，那么只需要找它的父亲即可}
        \PYG{n}{x} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{;}

    \PYG{k}{return} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n+nf}{left\PYGZus{}rotate}\PYG{p}{(}\PYG{n}{pNode} \PYG{n}{x}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
    \PYG{n}{pNode} \PYG{n}{y} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{p}{;}

    \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right} \PYG{o}{=} \PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{p}{;}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left} \PYG{o}{!=} \PYG{n}{nil}\PYG{p}{)}
        \PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{=} \PYG{n}{x}\PYG{p}{;}

    \PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{;}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{==} \PYG{n}{x}\PYG{p}{)} \PYG{c+c1}{//如果x是根节点}
        \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{=} \PYG{n}{y}\PYG{p}{;}
    \PYG{k}{else} \PYG{k}{if} \PYG{p}{(}\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left} \PYG{o}{==} \PYG{n}{x}\PYG{p}{)}
        \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left} \PYG{o}{=} \PYG{n}{y}\PYG{p}{;}
    \PYG{k}{else}
        \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right} \PYG{o}{=} \PYG{n}{y}\PYG{p}{;}

    \PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left} \PYG{o}{=} \PYG{n}{x}\PYG{p}{;}
    \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{=} \PYG{n}{y}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n+nf}{right\PYGZus{}rotate}\PYG{p}{(}\PYG{n}{pNode} \PYG{n}{x}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
    \PYG{n}{pNode} \PYG{n}{y} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{p}{;}

    \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left} \PYG{o}{=} \PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{p}{;}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right} \PYG{o}{!=} \PYG{n}{nil}\PYG{p}{)}
        \PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{=} \PYG{n}{x}\PYG{p}{;}

    \PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{;}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{==} \PYG{n}{x}\PYG{p}{)}
        \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{=} \PYG{n}{y}\PYG{p}{;}
    \PYG{k}{else} \PYG{k}{if} \PYG{p}{(}\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left} \PYG{o}{==} \PYG{n}{x}\PYG{p}{)}
        \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left} \PYG{o}{=} \PYG{n}{y}\PYG{p}{;}
    \PYG{k}{else}
        \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right} \PYG{o}{=} \PYG{n}{y}\PYG{p}{;}

    \PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right} \PYG{o}{=} \PYG{n}{x}\PYG{p}{;}
    \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{=} \PYG{n}{y}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n+nf}{rb\PYGZus{}insert\PYGZus{}fixup}\PYG{p}{(}\PYG{n}{pNode} \PYG{n}{T}\PYG{p}{,} \PYG{n}{pNode} \PYG{n}{x}\PYG{p}{)} \PYG{c+c1}{// T是一个管理节点，T\PYGZhy{}\PYGZgt{}parent指向根节点}
\PYG{p}{\PYGZob{}}
    \PYG{n}{pNode} \PYG{n}{y}\PYG{p}{;}

    \PYG{k}{while} \PYG{p}{(}\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{==} \PYG{n}{RED}\PYG{p}{)} \PYG{c+c1}{//如果x的父亲是红节点，此时x的祖节点必为黑色(不然在插入前就不满足条件)}
    \PYG{p}{\PYGZob{}}
        \PYG{k}{if} \PYG{p}{(}\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left} \PYG{o}{==} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{)} \PYG{p}{\PYGZob{}} \PYG{c+c1}{//如果x的父亲是左孩子}
            \PYG{n}{y} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{p}{;} \PYG{c+c1}{//y是其叔节点}
            \PYG{k}{if} \PYG{p}{(}\PYG{n}{y} \PYG{o}{!=} \PYG{n}{nil} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{==} \PYG{n}{RED}\PYG{p}{)} \PYG{p}{\PYGZob{}} \PYG{c+c1}{//此状态下可能会破坏性质4}
                \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{BLACK}\PYG{p}{;} \PYG{c+c1}{//父节点变为黑}
                \PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{BLACK}\PYG{p}{;} \PYG{c+c1}{//叔节点变为黑}
                \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{RED}\PYG{p}{;} \PYG{c+c1}{//祖节点变为红，如果其曾祖节点为红色，那么性质4被破坏}
                \PYG{n}{x} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{;} \PYG{c+c1}{//进行下一轮循环，查看其祖节点和曾祖节点是够满足要求}
            \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{k}{if} \PYG{p}{(}\PYG{n}{x} \PYG{o}{==} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{p}{)} \PYG{p}{\PYGZob{}} \PYG{c+c1}{//此时其叔节点要么为空(空可以看作黑)要么为黑，如果x为内侧插入}
                \PYG{n}{x} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{;}
                \PYG{n}{left\PYGZus{}rotate}\PYG{p}{(}\PYG{n}{x}\PYG{p}{);}
            \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}}\PYG{c+c1}{//外侧插入}
                \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{BLACK}\PYG{p}{;}
                \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{RED}\PYG{p}{;}
                \PYG{n}{right\PYGZus{}rotate}\PYG{p}{(}\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{);}
            \PYG{p}{\PYGZcb{}}
        \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}} \PYG{c+c1}{//如果x的父亲是右孩子}
            \PYG{n}{y} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{p}{;} \PYG{c+c1}{//y是其叔节点}
            \PYG{k}{if} \PYG{p}{(}\PYG{n}{y} \PYG{o}{!=} \PYG{n}{nil} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{==} \PYG{n}{RED}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{BLACK}\PYG{p}{;} \PYG{c+c1}{//父节点变为黑}
                \PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{BLACK}\PYG{p}{;} \PYG{c+c1}{//叔节点变为黑}
                \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{RED}\PYG{p}{;} \PYG{c+c1}{//祖节点变为红}
                \PYG{n}{x} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{;} \PYG{c+c1}{//查看其祖节点和曾祖节点是够满足要求}
            \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{k}{if} \PYG{p}{(}\PYG{n}{x} \PYG{o}{==} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{p}{)} \PYG{p}{\PYGZob{}} \PYG{c+c1}{//此时其叔节点要么为空(空可以看作黑)，}
                \PYG{c+c1}{//要么为黑，如果x为内侧插入}
                \PYG{n}{x} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{;}
                \PYG{n}{right\PYGZus{}rotate}\PYG{p}{(}\PYG{n}{x}\PYG{p}{);}
            \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}}
                \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{BLACK}\PYG{p}{;}
                \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{RED}\PYG{p}{;}
                \PYG{n}{left\PYGZus{}rotate}\PYG{p}{(}\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{);}
            \PYG{p}{\PYGZcb{}}
        \PYG{p}{\PYGZcb{}}
        \PYG{n}{T}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{BLACK}\PYG{p}{;} \PYG{c+c1}{//这部不能掉，不然当根节点变成红色后会引发不必要的操作，}
            \PYG{c+c1}{//根节点由红变黑不影响任何性质}
    \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n+nf}{rb\PYGZus{}insert}\PYG{p}{(}\PYG{n}{pNode} \PYG{n}{T}\PYG{p}{,} \PYG{k+kt}{int} \PYG{n}{val}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
    \PYG{n}{pNode} \PYG{n}{x}\PYG{p}{,} \PYG{n}{y}\PYG{p}{,} \PYG{n}{z}\PYG{p}{;}

    \PYG{n}{y} \PYG{o}{=} \PYG{n}{nil}\PYG{p}{;}
    \PYG{n}{x} \PYG{o}{=} \PYG{n}{T}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{;} \PYG{c+c1}{//根节点}
    \PYG{n}{z} \PYG{o}{=} \PYG{p}{(}\PYG{n}{pNode}\PYG{p}{)}\PYG{n}{malloc}\PYG{p}{(}\PYG{k}{sizeof}\PYG{p}{(}\PYG{n}{Node}\PYG{p}{));}
    \PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{RED}\PYG{p}{;}
    \PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{value} \PYG{o}{=} \PYG{n}{val}\PYG{p}{;}
    \PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left} \PYG{o}{=} \PYG{n}{nil}\PYG{p}{;}
    \PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right} \PYG{o}{=} \PYG{n}{nil}\PYG{p}{;}

    \PYG{k}{while} \PYG{p}{(}\PYG{n}{x} \PYG{o}{!=} \PYG{n}{nil}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{n}{y} \PYG{o}{=} \PYG{n}{x}\PYG{p}{;}
        \PYG{k}{if} \PYG{p}{(}\PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{value} \PYG{o}{\PYGZlt{}} \PYG{n}{val}\PYG{p}{)}
            \PYG{n}{x} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{p}{;}
        \PYG{k}{else}
            \PYG{n}{x} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}

    \PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{=} \PYG{n}{y}\PYG{p}{;}

    \PYG{k}{if} \PYG{p}{(}\PYG{n}{y} \PYG{o}{==} \PYG{n}{nil}\PYG{p}{)}
    \PYG{p}{\PYGZob{}}
        \PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{BLACK}\PYG{p}{;}
        \PYG{n}{T}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{=} \PYG{n}{z}\PYG{p}{;}
        \PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{=} \PYG{n}{T}\PYG{p}{;}
        \PYG{k}{return}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}
    \PYG{k}{else} \PYG{k}{if} \PYG{p}{(}\PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{value} \PYG{o}{\PYGZlt{}} \PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{value}\PYG{p}{)}
        \PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right} \PYG{o}{=} \PYG{n}{z}\PYG{p}{;}
    \PYG{k}{else}
        \PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left} \PYG{o}{=} \PYG{n}{z}\PYG{p}{;}
    \PYG{n}{rb\PYGZus{}insert\PYGZus{}fixup}\PYG{p}{(}\PYG{n}{T}\PYG{p}{,} \PYG{n}{z}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n+nf}{rb\PYGZus{}transplant}\PYG{p}{(}\PYG{n}{pNode} \PYG{n}{u}\PYG{p}{,} \PYG{n}{pNode} \PYG{n}{v}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{u}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{==} \PYG{n}{u}\PYG{p}{)} \PYG{p}{\PYGZob{}} \PYG{c+c1}{//u为根节点}
        \PYG{n}{u}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{=} \PYG{n}{v}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{k}{if} \PYG{p}{(}\PYG{n}{u}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left} \PYG{o}{==} \PYG{n}{u}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{n}{u}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left} \PYG{o}{=} \PYG{n}{v}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}}
        \PYG{n}{u}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right} \PYG{o}{=} \PYG{n}{v}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}
    \PYG{n}{v}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{=} \PYG{n}{u}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{c+cm}{/*}
\PYG{c+cm}{ * 运行此函数时，就说明了x的前继y是一个黑节点}
\PYG{c+cm}{ * x如果为黑，那么x点必为nil点，}
\PYG{c+cm}{     (因为y为黑，并且y没有左孩子，那么其不可能有一个非nil的黑右孩子)，否则一开始便破坏了性质5}
\PYG{c+cm}{ * 如果x为红，将其直接变为黑即可}
\PYG{c+cm}{ */}

\PYG{k+kt}{void} \PYG{n+nf}{rb\PYGZus{}delete\PYGZus{}fixup}\PYG{p}{(}\PYG{n}{pNode} \PYG{n}{T}\PYG{p}{,} \PYG{n}{pNode} \PYG{n}{x}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
    \PYG{c+cm}{/*}
\PYG{c+cm}{     * 第一次进入循环时x必为nil，此时需要根据x的兄弟节点来判别情况}
\PYG{c+cm}{     * 如果x的兄弟是红色，那么其兄弟必然有两个非nil的左右黑孩子，否则一开始便不符合情况5}
\PYG{c+cm}{     * 如果其兄弟为黑，那么其兄弟要么没有孩子，要么有两个红孩子，要么有一个红孩子}
\PYG{c+cm}{     */}

    \PYG{n}{pNode} \PYG{n}{w}\PYG{p}{;}
    \PYG{k}{while} \PYG{p}{(}\PYG{n}{x} \PYG{o}{!=} \PYG{n}{T}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{==} \PYG{n}{BLACK}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{k}{if} \PYG{p}{(}\PYG{n}{x} \PYG{o}{==} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{p}{)} \PYG{p}{\PYGZob{}} \PYG{c+c1}{//如果x是左孩子}
            \PYG{n}{w} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{p}{;} \PYG{c+c1}{//w是x的兄弟节点}
\PYG{c+c1}{//case1:}
            \PYG{k}{if} \PYG{p}{(}\PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{==} \PYG{n}{RED}\PYG{p}{)} \PYG{p}{\PYGZob{}}

                \PYG{c+cm}{/*}
\PYG{c+cm}{                 * 如果w是红色，此时w和x的父亲就是黑色，而且w必有两个非nil黑孩子，否则破坏性质5}
\PYG{c+cm}{                 * 这两个黑孩子可能有红孩子，如果左孩子没有红孩子，会进行下面的case2操作}
\PYG{c+cm}{                 * 将w和其父亲反色，然后左旋转}
\PYG{c+cm}{                 * 此时的状态可以看作w是根节点为黑色，w有一个左孩子，是w和x此前的父亲(红色)，}
\PYG{c+cm}{                 w有一个右孩子，就是旋转前的右孩子(黑色，可能有数量不定的红孩子)}
\PYG{c+cm}{                 * w的左孩子此时也有两个孩子，左边的是x(nil)，}
\PYG{c+cm}{                     右边的是w旋转前的左孩子(黑色，可能有数量不定的红孩子)}
\PYG{c+cm}{                 */}

                \PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{RED}\PYG{p}{;} \PYG{c+c1}{//旋转点及其右孩子变色}
                \PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{BLACK}\PYG{p}{;}
                \PYG{n}{left\PYGZus{}rotate}\PYG{p}{(}\PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{);} \PYG{c+c1}{//然后左转，此时w的左孩子(黑色)成为了x父亲的右孩子，}
                    \PYG{c+c1}{//w成为了x的爷爷}
                \PYG{n}{w} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{p}{;} \PYG{c+c1}{//重新将w设置为x的兄弟}
            \PYG{p}{\PYGZcb{}}
\PYG{c+c1}{//case2:}
            \PYG{k}{if} \PYG{p}{(}\PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{==} \PYG{n}{BLACK} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{==} \PYG{n}{BLACK}\PYG{p}{)} \PYG{p}{\PYGZob{}}

                \PYG{c+cm}{/*}
\PYG{c+cm}{                 * 如果x的兄弟左右孩子的颜色都为黑，那么这种情况只可能是由case1的旋转操作得来的}
\PYG{c+cm}{                 * 即case1的w的左孩子(非nil黑色)没有红色孩子，}
\PYG{c+cm}{                     因为不存在互为兄弟的黑色节点都没有红孩子的情况}
\PYG{c+cm}{                 */}

                \PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{RED}\PYG{p}{;} \PYG{c+c1}{//如果w的左孩子有红孩子的话这步会直接导致性质4被破坏}
                \PYG{n}{x} \PYG{o}{=} \PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{;} \PYG{c+c1}{//此时x是红色，循环退出后将其变为黑色即可}
            \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{k}{if} \PYG{p}{(}\PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{==} \PYG{n}{BLACK}\PYG{p}{)} \PYG{p}{\PYGZob{}}
\PYG{c+c1}{//case3:}
                \PYG{c+cm}{/*}
\PYG{c+cm}{                 * 如果w的右子树是黑色，那么w的右孩子就是nil。因为w本身是黑色，}
\PYG{c+cm}{                     其不可能有黑色孩子(否则破坏性质5)}
\PYG{c+cm}{                 * 由于w为黑色时，其必有一个红孩子，因为不存在互为兄弟的黑色节点都没有红孩子的情况}
\PYG{c+cm}{                 * w此时是右子树，它的红孩子是它的左节点，处于内侧，需要通过旋转将红节点移动到外侧}
\PYG{c+cm}{                 * 将w和w的左孩子反色后右旋转}
\PYG{c+cm}{                 * 此时的状态可以看作根节点是x的父亲，}
\PYG{c+cm}{                     颜色未知(因为旋转前w和x都为黑色，其父亲什么颜色没有影响)}
\PYG{c+cm}{                 * 根节点的左孩子是x(nil)，右孩子是旋转前w的左孩子(黑色，本来是红色，反色后旋转)，}
\PYG{c+cm}{                     根节点的右孩子的右孩子(红色，本来是黑色，就是旋转前的w)}
\PYG{c+cm}{                 */}

                \PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{BLACK}\PYG{p}{;} \PYG{c+c1}{//w的左孩子原本为红色}
                \PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{RED}\PYG{p}{;} \PYG{c+c1}{//将w由黑色变为红色}
                \PYG{n}{right\PYGZus{}rotate}\PYG{p}{(}\PYG{n}{w}\PYG{p}{);} \PYG{c+c1}{//将w点和其左孩子反色然后右旋转，形状上就像将左孩子移动到了右孩子的位置}
                \PYG{n}{w} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{p}{;} \PYG{c+c1}{//将w重新设置为x的兄弟，也可以用w = w\PYGZhy{}\PYGZgt{}parent}
            \PYG{p}{\PYGZcb{}}
\PYG{c+c1}{//case4:}
\PYG{c+cm}{/*}
\PYG{c+cm}{ * 此时状态有两种，w有两个红孩子，或者有一个右红孩子}
\PYG{c+cm}{ * 此时有w的父节点(颜色未知)，w(颜色为黑)，w的右子节点(颜色为红)，}
\PYG{c+cm}{     w的左子节点(可能存在，存在就为红，存在与否对下面的操作无影响)}
\PYG{c+cm}{ * 将w\PYGZhy{}\PYGZgt{}parent，w，w\PYGZhy{}\PYGZgt{}right 变为黑红黑，或者黑黑黑，取决于w的父节点的颜色，}
\PYG{c+cm}{     父节点为黑就变为黑黑黑，否则为黑红黑，也就是w变为其父亲的颜色}
\PYG{c+cm}{ * 因为下面需要绕w的父亲进行左旋转，w就会代替其父亲的位置，所以需要w和其父亲同色}
\PYG{c+cm}{ * 看上去就像是w失去了一个孩子，该孩子移动到了x处}
\PYG{c+cm}{ */}
            \PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color}\PYG{p}{;} \PYG{c+c1}{//w变为父亲的颜色}
            \PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{BLACK}\PYG{p}{;} \PYG{c+c1}{//w的父亲变为黑色}
            \PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{BLACK}\PYG{p}{;} \PYG{c+c1}{//w的右孩子变为黑色}
            \PYG{n}{left\PYGZus{}rotate}\PYG{p}{(}\PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{);} \PYG{c+c1}{//左旋转}
            \PYG{n}{x} \PYG{o}{=} \PYG{n}{T}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{;} \PYG{c+c1}{//退出循环}
        \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}} \PYG{c+c1}{//x为右孩子，与上面情况对称}
            \PYG{n}{w} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{p}{;}
\PYG{c+c1}{//case1:}
            \PYG{k}{if} \PYG{p}{(}\PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{==} \PYG{n}{RED}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                \PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{RED}\PYG{p}{;}
                \PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{BLACK}\PYG{p}{;}
                \PYG{n}{right\PYGZus{}rotate}\PYG{p}{(}\PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{);}
                \PYG{n}{w} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{p}{;}
            \PYG{p}{\PYGZcb{}}
\PYG{c+c1}{//case2:}
            \PYG{k}{if} \PYG{p}{(}\PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{==} \PYG{n}{BLACK} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{==} \PYG{n}{BLACK}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                \PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{RED}\PYG{p}{;}
                \PYG{n}{x} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{;}
            \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{k}{if} \PYG{p}{(}\PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{==} \PYG{n}{BLACK}\PYG{p}{)} \PYG{p}{\PYGZob{}}
\PYG{c+c1}{//case3:}
                \PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{BLACK}\PYG{p}{;}
                \PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{RED}\PYG{p}{;}
                \PYG{n}{left\PYGZus{}rotate}\PYG{p}{(}\PYG{n}{w}\PYG{p}{);}
                \PYG{n}{w} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{p}{;}
            \PYG{p}{\PYGZcb{}}
\PYG{c+c1}{//case4:}
            \PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color}\PYG{p}{;}
            \PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{BLACK}\PYG{p}{;}
            \PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{BLACK}\PYG{p}{;}
            \PYG{n}{right\PYGZus{}rotate}\PYG{p}{(}\PYG{n}{w}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{);}
        \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}
    \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{BLACK}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n+nf}{rb\PYGZus{}delete}\PYG{p}{(}\PYG{n}{pNode} \PYG{n}{T}\PYG{p}{,} \PYG{k+kt}{int} \PYG{n}{val}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
    \PYG{n}{pNode} \PYG{n}{x}\PYG{p}{,} \PYG{n}{y}\PYG{p}{,} \PYG{n}{z}\PYG{p}{;}
    \PYG{k+kt}{int} \PYG{n}{color}\PYG{p}{;}

    \PYG{k}{if} \PYG{p}{((}\PYG{n}{z} \PYG{o}{=} \PYG{n}{rb\PYGZus{}find}\PYG{p}{(}\PYG{n}{T}\PYG{p}{,} \PYG{n}{val}\PYG{p}{))} \PYG{o}{==} \PYG{n}{nil}\PYG{p}{)} \PYG{c+c1}{//未找到}
        \PYG{k}{return}\PYG{p}{;}
    \PYG{n}{y} \PYG{o}{=} \PYG{n}{z}\PYG{p}{;}
    \PYG{n}{color} \PYG{o}{=} \PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color}\PYG{p}{;}

    \PYG{k}{if} \PYG{p}{(}\PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left} \PYG{o}{==} \PYG{n}{nil}\PYG{p}{)} \PYG{p}{\PYGZob{}}

       \PYG{c+cm}{/*}
\PYG{c+cm}{        * 如果被删除节点最多一个孩子，该节点可能为黑色，也可能为红色}
\PYG{c+cm}{        * 如果为红色，那么它必定没有孩子，删除一个无孩子的红节点没有任何影响}
\PYG{c+cm}{        * 如果为黑色，那么它可能有一个红孩子，也可能没孩子}
\PYG{c+cm}{        * 如果为黑色且有一个红孩子，则直接使用将该红孩子替换它后变为黑色}
\PYG{c+cm}{        * 如果为黑色且没有孩子，x则为nil节点，那么则需rb\PYGZus{}delete\PYGZus{}pickup修复该红黑树}
\PYG{c+cm}{        */}

        \PYG{n}{x} \PYG{o}{=} \PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{p}{;}
        \PYG{n}{rb\PYGZus{}transplant}\PYG{p}{(}\PYG{n}{z}\PYG{p}{,} \PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{k}{if}\PYG{p}{(}\PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right} \PYG{o}{==} \PYG{n}{nil}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{n}{x} \PYG{o}{=} \PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{p}{;}
        \PYG{n}{rb\PYGZus{}transplant}\PYG{p}{(}\PYG{n}{z}\PYG{p}{,} \PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}}

        \PYG{c+cm}{/*}
\PYG{c+cm}{         * 此时被删除的z节点有两个孩子，先用后继点y移动到被删除的z处并变为z的颜色，}
\PYG{c+cm}{             那么可以看做实际上是删除了y节点}
\PYG{c+cm}{         * y必没有左孩子(如果其有左孩子，那么其左孩子就是y的前继)，而y本身必定在z的右子树上}
\PYG{c+cm}{         * 如果y是红节点，那么其必定也没有右孩子}
\PYG{c+cm}{         * 如果y是黑节点，那么可能有右孩子，}
\PYG{c+cm}{             如果有，该右孩子是唯一节点且必为红，只需要用该红孩子移动到y处变黑即可}
\PYG{c+cm}{         */}

        \PYG{n}{y} \PYG{o}{=} \PYG{n}{tree\PYGZus{}minimum}\PYG{p}{(}\PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{p}{);}
        \PYG{n}{color} \PYG{o}{=} \PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color}\PYG{p}{;} \PYG{c+c1}{//保存后继点y的颜色，因为实际上是y被删除了}
        \PYG{n}{x} \PYG{o}{=} \PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{p}{;} \PYG{c+c1}{//由于y可能有唯一的右红孩子，如果确实有红孩子，该红孩子就能顶替y，如果没有，x就是nil}
        \PYG{k}{if} \PYG{p}{(}\PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{==} \PYG{n}{z}\PYG{p}{)} \PYG{p}{\PYGZob{}}

            \PYG{c+cm}{/*}
\PYG{c+cm}{             * 如果z的后继正好是其右孩子}
\PYG{c+cm}{             * 如果x为nil，则y没有右孩子，y有可能为红，也可能为黑}
\PYG{c+cm}{             * 由于x可能为nil，需要将nil的父节点设置为y，不然}
\PYG{c+cm}{                 后面的rb\PYGZus{}delete\PYGZus{}fixup传递的x是nil却无法找到其父节点}
\PYG{c+cm}{             */}

             \PYG{n}{x}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{=} \PYG{n}{y}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}}

            \PYG{c+cm}{/*}
\PYG{c+cm}{             * 如果y不是z的右孩子，则先用y的右孩子x(可能为红或者nil)替换y}
\PYG{c+cm}{             * 由于y后面要移动到z处，先将z的右子树和y绑定}
\PYG{c+cm}{             */}

            \PYG{n}{rb\PYGZus{}transplant}\PYG{p}{(}\PYG{n}{y}\PYG{p}{,} \PYG{n}{x}\PYG{p}{);}
            \PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right} \PYG{o}{=} \PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{p}{;}
            \PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{=} \PYG{n}{y}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}

        \PYG{c+cm}{/*}
\PYG{c+cm}{         * 将y替换z，并将z的左子树和y绑定}
\PYG{c+cm}{         */}

        \PYG{n}{rb\PYGZus{}transplant}\PYG{p}{(}\PYG{n}{z}\PYG{p}{,} \PYG{n}{y}\PYG{p}{);}
        \PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left} \PYG{o}{=} \PYG{n}{z}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{p}{;}
        \PYG{n}{y}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{=} \PYG{n}{y}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}

    \PYG{c+cm}{/*}
\PYG{c+cm}{     * 被删除的节点已经由其后继补上，问题是其后继失去后，其后继的右孩子顶替后继所产生的影响}
\PYG{c+cm}{     * 如果x是红色，说明y有一个红色右孩子，y必然是黑色，}
\PYG{c+cm}{         前面的操作已经将x放置到y的位置了，后面只需要调用rb\PYGZus{}delete\PYGZus{}fixup将红变黑即可}
\PYG{c+cm}{     * 如果y为红色且没有右孩子，删除一个红色节点没有影响，下面的if语句会失败}
\PYG{c+cm}{     * 如果y为黑色且没有右孩子，删除一个黑色节点后会破坏性质5，由于x是y的右孩子，那么x就是nil，}
\PYG{c+cm}{         如果x为一个非nil的黑节点，在删除进行前，由于x的前继y并没有左节点，此时已经破坏了性质5}
\PYG{c+cm}{     */}

    \PYG{k}{if} \PYG{p}{(}\PYG{n}{color} \PYG{o}{==} \PYG{n}{BLACK}\PYG{p}{)}
        \PYG{n}{rb\PYGZus{}delete\PYGZus{}fixup}\PYG{p}{(}\PYG{n}{T}\PYG{p}{,} \PYG{n}{x}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n+nf}{inordered\PYGZus{}walk}\PYG{p}{(}\PYG{n}{pNode} \PYG{n}{T}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{T} \PYG{o}{!=} \PYG{n}{nil}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{n}{inordered\PYGZus{}walk}\PYG{p}{(}\PYG{n}{T}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{left}\PYG{p}{);}
        \PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}\PYGZpc{}d \PYGZdq{}}\PYG{p}{,} \PYG{n}{T}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{value}\PYG{p}{);}
        \PYG{n}{inordered\PYGZus{}walk}\PYG{p}{(}\PYG{n}{T}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{right}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{int} \PYG{n+nf}{main}\PYG{p}{(}\PYG{k+kt}{void}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
    \PYG{n}{setbuf}\PYG{p}{(}\PYG{n}{stdout}\PYG{p}{,} \PYG{n+nb}{NULL}\PYG{p}{);}
    \PYG{k+kt}{int} \PYG{n}{i}\PYG{p}{,} \PYG{n}{n}\PYG{p}{;}
    \PYG{n}{nil} \PYG{o}{=} \PYG{p}{(}\PYG{n}{pNode}\PYG{p}{)}\PYG{n}{calloc}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{k}{sizeof}\PYG{p}{(}\PYG{n}{Node}\PYG{p}{));}
    \PYG{n}{nil}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{color} \PYG{o}{=} \PYG{n}{BLACK}\PYG{p}{;}
    \PYG{n}{pNode} \PYG{n}{T} \PYG{o}{=} \PYG{p}{(}\PYG{n}{pNode}\PYG{p}{)}\PYG{n}{calloc}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{,} \PYG{k}{sizeof}\PYG{p}{(}\PYG{n}{Node}\PYG{p}{));}
    \PYG{c+c1}{//设置一个空节点，其parent指向根节点，左节点指向最小节点，右节点指向NULL}
    \PYG{n}{T}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent} \PYG{o}{=} \PYG{n}{nil}\PYG{p}{;}
    \PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}请输入想要插入的数目: \PYGZdq{}}\PYG{p}{);}
    \PYG{n}{scanf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}\PYGZpc{}d\PYGZdq{}}\PYG{p}{,} \PYG{o}{\PYGZam{}}\PYG{n}{i}\PYG{p}{);}
    \PYG{k}{for} \PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{j} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{j} \PYG{o}{\PYGZlt{}} \PYG{n}{i}\PYG{p}{;} \PYG{o}{++}\PYG{n}{j}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{n}{scanf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}\PYGZpc{}d\PYGZdq{}}\PYG{p}{,} \PYG{o}{\PYGZam{}}\PYG{n}{n}\PYG{p}{);}
        \PYG{n}{rb\PYGZus{}insert}\PYG{p}{(}\PYG{n}{T}\PYG{p}{,} \PYG{n}{n}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}
    \PYG{n}{rb\PYGZus{}delete}\PYG{p}{(}\PYG{n}{T}\PYG{p}{,} \PYG{l+m+mi}{3}\PYG{p}{);}
    \PYG{n}{inordered\PYGZus{}walk}\PYG{p}{(}\PYG{n}{T}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{parent}\PYG{p}{);}
    \PYG{k}{return} \PYG{l+m+mi}{0}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
